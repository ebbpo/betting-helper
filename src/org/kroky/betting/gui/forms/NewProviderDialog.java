/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.kroky.betting.gui.forms;

import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;
import org.kroky.betting.common.enums.ProviderType;
import org.kroky.betting.common.util.Utils;
import org.kroky.betting.db.DAO;
import org.kroky.betting.db.DBState;
import org.kroky.betting.db.objects.Provider;
import org.kroky.betting.db.objects.Team;
import org.kroky.betting.gui.custom.EscapableDialog;
import org.kroky.betting.gui.custom.SortedComboBoxModel;

/**
 *
 * @author Kroky
 */
public class NewProviderDialog extends EscapableDialog {
    private static final Logger LOG = Logger.getLogger(NewProviderDialog.class);
    /**
     * Creates new form NewProviderDialog
     */
    public NewProviderDialog(java.awt.Frame parent, boolean modal, ProviderType type) {
        super(parent, modal);
        this.type = type;
        initComponents();
        additionalInit();
        Utils.centerOnParent(parent, this);
    }
    
    public NewProviderDialog(JDialog parent, boolean modal, ProviderType type, Team team) {
        super(parent, modal);
        this.type = type;
        this.team = team;
        initComponents();
        additionalInit();
        Utils.centerOnParent(parent, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfUrl = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cbSport = new javax.swing.JComboBox();
        cbCountry = new javax.swing.JComboBox();
        cbLeague = new javax.swing.JComboBox();
        cbSeason = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("");

        jLabel1.setText("League:");

        jLabel5.setText("URL:");

        tfUrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUrlActionPerformed(evt);
            }
        });

        jLabel3.setText("Sport:");

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        jLabel2.setText("Country:");

        cbSport.setEditable(true);
        cbSport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSportActionPerformed(evt);
            }
        });

        cbCountry.setEditable(true);
        cbCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCountryActionPerformed(evt);
            }
        });

        cbLeague.setEditable(true);
        cbLeague.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLeagueActionPerformed(evt);
            }
        });

        cbSeason.setEditable(true);
        cbSeason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSeasonActionPerformed(evt);
            }
        });

        jLabel4.setText("Season:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnOk)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancel))
                            .addComponent(tfUrl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbCountry, 0, 133, Short.MAX_VALUE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbSport, 0, 130, Short.MAX_VALUE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbLeague, 0, 133, Short.MAX_VALUE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(cbSeason, 0, 133, Short.MAX_VALUE))))
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnOk});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbLeague, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSeason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOk))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        closeWindow();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        //<editor-fold defaultstate="collapsed" desc="...">
        final String league = cbLeague.getSelectedItem().toString();
        final String sport = cbSport.getSelectedItem().toString();
        final String country = cbCountry.getSelectedItem().toString();
        final String url = tfUrl.getText();
        final String season = cbSeason.getSelectedItem().toString();
        if(Utils.isEmpty(league) || Utils.isEmpty(sport) || Utils.isEmpty(country) || Utils.isEmpty(url) || Utils.isEmpty(season)) {
            JOptionPane.showMessageDialog(this, "All fields must be filled", "Invalid data", JOptionPane.ERROR_MESSAGE);
            return;
        }
        boolean exists;
        exists = DAO.get(Provider.class, url) != null;
        if(exists) {
            JOptionPane.showMessageDialog(this, "Provider with the same URL already exists", "Invalid data", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Provider newProvider = new Provider(country, sport, league, url, season, type);
        
        DAO.insertProvider(newProvider);
        DBState.setAdded(Provider.class, true);
        this.provider = newProvider;
        closeWindow();
        //</editor-fold>
    }//GEN-LAST:event_btnOkActionPerformed

    private void cbSportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSportActionPerformed
        //<editor-fold defaultstate="collapsed" desc="...">
        String sport = (String) cbSport.getSelectedItem();
        if (evt.getActionCommand().equals("comboBoxEdited")) {
            sport = Utils.capitalizeFirstLetter(sport);
            SortedComboBoxModel cmbModel = (SortedComboBoxModel) cbSport.getModel();
            cmbModel.addElement(sport);
        }
        cbSport.setSelectedItem(sport);
        //</editor-fold>
    }//GEN-LAST:event_cbSportActionPerformed

    private void cbCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCountryActionPerformed
        //<editor-fold defaultstate="collapsed" desc="...">
        String country = (String) cbCountry.getSelectedItem();
        if (evt.getActionCommand().equals("comboBoxEdited")) {
            country = Utils.capitalizeFirstLetter(country);
            SortedComboBoxModel cmbModel = (SortedComboBoxModel) cbCountry.getModel();
            cmbModel.addElement(country);
        }
        cbCountry.setSelectedItem(country);
        //</editor-fold>
    }//GEN-LAST:event_cbCountryActionPerformed

    private void cbLeagueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLeagueActionPerformed
        //<editor-fold defaultstate="collapsed" desc="...">
        String country = (String) cbLeague.getSelectedItem();
        if (evt.getActionCommand().equals("comboBoxEdited")) {
            country = Utils.capitalizeFirstLetter(country);
            SortedComboBoxModel cmbModel = (SortedComboBoxModel) cbLeague.getModel();
            cmbModel.addElement(country);
        }
        cbLeague.setSelectedItem(country);
        //</editor-fold>
    }//GEN-LAST:event_cbLeagueActionPerformed

    private void tfUrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUrlActionPerformed
        btnOkActionPerformed(evt);
    }//GEN-LAST:event_tfUrlActionPerformed

    private void cbSeasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSeasonActionPerformed
        //<editor-fold defaultstate="collapsed" desc="...">
        String season = (String) cbSeason.getSelectedItem();
        if (evt.getActionCommand().equals("comboBoxEdited")) {
            season = Utils.capitalizeFirstLetter(season);
            SortedComboBoxModel cmbModel = (SortedComboBoxModel) cbSeason.getModel();
            cmbModel.addElement(season);
        }
        cbSeason.setSelectedItem(season);
        //</editor-fold>
    }//GEN-LAST:event_cbSeasonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JComboBox cbCountry;
    private javax.swing.JComboBox cbLeague;
    private javax.swing.JComboBox cbSeason;
    private javax.swing.JComboBox cbSport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField tfUrl;
    // End of variables declaration//GEN-END:variables

    private ProviderType type;
    private Team team;
    private Provider provider;
    
    private void additionalInit() {
        //<editor-fold defaultstate="collapsed" desc="...">
        setTitle(type.equals(ProviderType.RESULTS) ? "New Results Provider" : "New Fixtures Provider");
        cbSport.setEnabled(team == null);
        cbCountry.setEnabled(team == null);
        cbLeague.setEnabled(team == null);
        List<String> countries;
        List<String> sports;
        List<String> leagues;
        List<String> seasons = DAO.getAllSeasonsFromProviders();
        seasons.add("");
        if (team == null) {
            countries = DAO.getAllCountriesFromProviders();
            sports = DAO.getAllSportsFromProviders();
            leagues = DAO.getAllLeaguesFromProviders();
            countries.add("");
            sports.add("");
            leagues.add("");
        } else {
            countries = DAO.getAllCountriesFromTeams();
            sports = DAO.getAllSportsFromTeams();
            leagues = DAO.getAllLeaguesFromTeams();
        }
        cbSport.setModel(new SortedComboBoxModel(sports.toArray(new String[0])));
        cbCountry.setModel(new SortedComboBoxModel(countries.toArray(new String[0])));
        cbLeague.setModel(new SortedComboBoxModel(leagues.toArray(new String[0])));
        cbSeason.setModel(new SortedComboBoxModel(seasons.toArray(new String[0])));
        if(team != null) {
            cbSport.setSelectedItem(team.getSport());
            cbCountry.setSelectedItem(team.getCountry());
            cbLeague.setSelectedItem(team.getLeague());
        }
        //</editor-fold>
    }

    public Provider getProvider() {
        return provider;
    }
    
}
